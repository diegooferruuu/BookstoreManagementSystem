@page
@model LibraryWeb.Pages.Users.ChangePasswordModel
@{
    ViewData["Title"] = "Cambiar Contraseña";
}

<div class="card p-4 shadow-sm mt-3">
    <h3 class="mb-4 text-primary"><i class="fas fa-key me-2"></i>Cambiar Contraseña</h3>

    <form method="post" id="changeForm" novalidate>
        <div class="mb-3">
            <label asp-for="CurrentPassword" class="form-label fw-semibold"></label>
            <input asp-for="CurrentPassword" type="password" class="form-control" placeholder="Ingresa tu contraseña actual" value="@Model.CurrentPassword" />
            <span asp-validation-for="CurrentPassword" class="text-danger small"></span>
        </div>

        <div class="mb-3">
            <label asp-for="NewPassword" class="form-label fw-semibold"></label>
            <input asp-for="NewPassword" type="password" class="form-control" id="newPassword" placeholder="Ingresa una nueva contraseña" value="@Model.NewPassword" />
            <span asp-validation-for="NewPassword" class="text-danger small"></span>

            <ul id="passwordRules" class="list-unstyled small mt-2 text-muted">
                <li id="rule-length"><i class="fas fa-circle text-secondary me-1"></i> Mínimo 8 caracteres</li>
                <li id="rule-upper"><i class="fas fa-circle text-secondary me-1"></i> Al menos una mayúscula</li>
                <li id="rule-lower"><i class="fas fa-circle text-secondary me-1"></i> Al menos una minúscula</li>
                <li id="rule-number"><i class="fas fa-circle text-secondary me-1"></i> Al menos un número</li>
                <li id="rule-special">
                    <i class="fas fa-circle text-secondary me-1"></i>
                    Al menos un carácter especial (¿, ¡, ., ,, ;, :, -, _, +, *, /, =, ?, !, @@, #, $, %, ^, &, (, ), [, ], {, }, <, >, |, ~, ', ", `, ¨, ´, …)
                </li>
            </ul>
        </div>

        <div class="mb-3">
            <label asp-for="ConfirmPassword" class="form-label fw-semibold"></label>
            <input asp-for="ConfirmPassword" type="password" class="form-control" id="confirmPassword" placeholder="Repite la nueva contraseña" />
            <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
            <div id="confirmMsg" class="small mt-1"></div>
        </div>

        <div class="d-flex">
            <button type="submit" class="btn btn-primary me-2">
                <i class="fas fa-save me-1"></i>Actualizar
            </button>
            <a asp-page="/Index" class="btn btn-secondary">
                <i class="fas fa-times me-1"></i>Cancelar
            </a>
        </div>
    </form>
</div>

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1100">
    <div id="successToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <i class="fas fa-check-circle me-2"></i>La contraseña se ha actualizado correctamente.
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const pwd = document.getElementById('newPassword');
        const confirm = document.getElementById('confirmPassword');
        const confirmMsg = document.getElementById('confirmMsg');

        function updateRule(id, valid) {
            const el = document.getElementById(id);
            el.querySelector('i').className = valid ? 'fas fa-check-circle text-success me-1' : 'fas fa-circle text-secondary me-1';
        }

        pwd.addEventListener('input', () => {
            const value = pwd.value;
            updateRule('rule-length', value.length >= 8);
            updateRule('rule-upper', /[A-Z]/.test(value));
            updateRule('rule-lower', /[a-z]/.test(value));
            updateRule('rule-number', /\d/.test(value));
            updateRule('rule-special', /[^A-Za-z0-9]/.test(value));
        });

        confirm.addEventListener('input', () => {
            if (confirm.value === pwd.value && confirm.value.length > 0) {
                confirmMsg.textContent = "Las contraseñas coinciden.";
                confirmMsg.className = "text-success small mt-1";
            } else if (confirm.value.length > 0) {
                confirmMsg.textContent = "Las contraseñas no coinciden.";
                confirmMsg.className = "text-danger small mt-1";
            } else {
                confirmMsg.textContent = "";
            }
        });
    </script>

    @if (TempData["SuccessMessage"] != null)
    {
        @: <script>
        @: const toastEl = document.getElementById('successToast');
        @: const toast = new bootstrap.Toast(toastEl);
        @: toast.show();
        @: setTimeout(() => { window.location.href = '/Auth/Login'; }, 2500);
        @: </script>
    }

}